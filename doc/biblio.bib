@article{khayam_practical,
  title    = {A {Practical} {Approach} for {Describing} {Language} {Semantics}},
  abstract = {Context Writing the formal description of a programming languageâ€™s semantics is still challenging. Indeed, specifications using imperative features (state, environment, exception) or language features (i.e., continuation manipulation) are arduous to write in conventional operational semantics (Structural Operational Semantics and Natural Semantics). To capture these side-effects, many work define substitutes [28, 43] or extensions [8, 9, 27] to Operational Semantics frameworks to ease the task. They provide tools to capture effectful semantics as a ruleset on paper (i.e., Modular Monadic Action Semantics (MMAS) [43], Modular Structural Operational Semantics (MSOS) [27]), with a side-effect: on large language specifications, the formal semantics is unmanageable as the number of rules grows fast. Moreover, to produce machine artifacts, such as interpreters, mechanized semantics, or analyzers, one needs to put massive effort into keeping the implementation faithful to the paper framework, which is not trivial work. To provide mechanization to a programming language semantics, it is usual practice to rely on proof assistants (i.e., Coq [41], Isabelle-HOL [12, 13], Twelf [11]) or use specification languages (i.e., [36], Ott [39], Lem [34]). Proof assistants offer environments where it is possible to define a logic (i.e., MSOS) in the proof assistant one. Then, writing a formalization means embedding the programming language semantics into the semantic framework described in the proof assistant. Differently, specification languages allow writing formalizations in the specification language logic and tools to reason over them.},
  language = {en},
  author   = {Khayam, Adam and Schmitt, Alan},
  file     = {Khayam et Schmitt - A Practical Approach for Describing Language Seman.pdf:/home/adelaett/Zotero/storage/M99F98RF/Khayam et Schmitt - A Practical Approach for Describing Language Seman.pdf:application/pdf}
}
